/*******************************************************************************
* タイトル:		フィールドプログラム
* プログラム名:	Field.cpp
* 作成者:		GP11A132 17 鍾政殷
* 作成日:		2023/06/19
*******************************************************************************/



/*******************************************************************************
* インクルードファイル
*******************************************************************************/
#include "Field.h"
#include "Player.h"
#include "Enemy.h"
#include "main.h"

/*******************************************************************************
* マクロ定義
*******************************************************************************/


/*******************************************************************************
* 構造体定義
*******************************************************************************/


/*******************************************************************************
* プロトタイプ宣言
*******************************************************************************/


/*******************************************************************************
* グローバル変数
*******************************************************************************/
// 2Dフィールド　20ⅹ20
int field[20][20] =
{
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1,
  1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1,
  1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
};



/*******************************************************************************
 関数名:	
 引数　:	
 戻り値:	
 説明　:	
*******************************************************************************/

// フィールドの初期化処理
void InitField(void) {

	// プレイヤーの初期化
	InitPlayer();

	// エネミーの初期化
	InitEnemy();
}

// フィールドの終了処理
void UninitField(void) {
	UninitPlayer();
	UninitEnemy();
}

// フィールド表示処理
void DrawField(void) {
	PLAYER* player = getPlayer();
	ENEMY* enemy = getEnemy();

	for (int y = player->y - 5; y < player->y + 8; y++) {
		// 1行表示
		for (int x = player->x - 9; x < player->x + 11; x++) {
			if (y < 0 || y >= 20 || x < 0 || x >= 20) {
				printf("X");
			}
			// Y行目のX列目がプレイヤーの座標と一致したら
			else if (x == player->x && y == player->y) {
				// Pを表示
				DrawPlayer();
			}
			else if ((x == enemy->x && y == enemy->y) || (x == (enemy + 1)->x && y == (enemy + 2)->y) ||
				(x == (enemy + 2)->x && y == (enemy + 2)->y))
			{
				DrawEnemy();
			}
			else {
				// 配列の中身にしたがって表示する
				switch (field[y][x]) {
				case 0: // 通れる
					printf(" ");
					break;
				case 1: // 障害物
					printf("#");
					break;
				default: // エラー検知
					printf("$");
					break;
				}
			}
		}
		printf("\n"); // 次の行へ改行する
	}
	Sleep(200);
}

// 指定されたXY座標を返す
int getFieldData(int y, int x) {
	return field[y][x];
}




